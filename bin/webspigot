#!/usr/bin/env ruby
require 'optparse'
require 'webspigot'
require 'pp'

@options = {
  safe_mode: "OFF",
  blur_previous: true,
  blur_amount: '0x6',
  outfile: '/tmp/spigot-composite.png'
}

@optparser = OptionParser.new do |o|
  o.banner = "Usage: webspigot"
  o.parse!
end

def usage
  puts @optparser
  exit
end

def get_loc(w, h)
  x = (w * rand).to_i - 200
  y = (h * rand).to_i - 100
  [x, y]
end

ws = Webspigot.new(@options)
while true
  if ARGV[0].nil?
    ws.run
  else
    ws.run(ARGV[0])
  end
  image_path = ws.save
  #puts "Search: #{ws.search_phrase}"
  #puts "Image : #{ws.image_url}"
  #puts "Saved : #{image_path}"
  w = 1920
  h = 1080
  loc = get_loc(w, h)

  # blur the composite
  if @options[:blur_previous]
    `convert #{@options[:outfile]} -blur #{@options[:blur_amount]} #{@options[:outfile]}`
  end
  # blur edges of current image
  `convert #{image_path} -alpha set -virtual-pixel transparent -channel A -blur 0x8 -level 50%,100% +channel #{image_path}.png`
  # compose blurred composite and current image
  `convert -background black -page #{w}x#{h} #{@options[:outfile]} -page +#{loc[0]}+#{loc[1]} #{image_path}.png -flatten #{@options[:outfile]}`

  #`feh --bg-fill #{@outfile}`
  #puts "cleaning up"
  File.delete(image_path)
  File.delete("#{image_path}.png")
  sleep 10
end
